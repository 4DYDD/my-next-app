{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middlewares/withAuth.ts"],"sourcesContent":["import { getToken } from \"next-auth/jwt\";\r\nimport {\r\n  NextFetchEvent,\r\n  NextMiddleware,\r\n  NextRequest,\r\n  NextResponse,\r\n} from \"next/server\";\r\n\r\nconst onlyAdmin = [\"/admin\"];\r\n\r\nexport default function withAuth(\r\n  middleware: NextMiddleware,\r\n  requireAuth: Array<string> = []\r\n) {\r\n  return async (req: NextRequest, next: NextFetchEvent) => {\r\n    const pathname = req.nextUrl.pathname;\r\n    if (requireAuth.includes(pathname)) {\r\n      const token = await getToken({\r\n        req,\r\n        secret: process.env.NEXTAUTH_SECRET,\r\n      });\r\n      if (!token) {\r\n        const url = new URL(\"/auth/login\", req.url);\r\n        url.searchParams.set(\"callbackUrl\", encodeURI(req.url));\r\n        return NextResponse.redirect(url);\r\n      }\r\n      if (token.role !== \"admin\" && onlyAdmin.includes(pathname)) {\r\n        return NextResponse.redirect(new URL(\"/\", req.url));\r\n      }\r\n    }\r\n    return middleware(req, next);\r\n  };\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AAOA,MAAM,YAAY;IAAC;CAAS;AAEb,SAAS,SACtB,UAA0B,EAC1B,cAA6B,EAAE;IAE/B,OAAO,OAAO,KAAkB;QAC9B,MAAM,WAAW,IAAI,OAAO,CAAC,QAAQ;QACrC,IAAI,YAAY,QAAQ,CAAC,WAAW;YAClC,MAAM,QAAQ,MAAM,CAAA,GAAA,oJAAA,CAAA,WAAQ,AAAD,EAAE;gBAC3B;gBACA,QAAQ,QAAQ,GAAG,CAAC,eAAe;YACrC;YACA,IAAI,CAAC,OAAO;gBACV,MAAM,MAAM,IAAI,IAAI,eAAe,IAAI,GAAG;gBAC1C,IAAI,YAAY,CAAC,GAAG,CAAC,eAAe,UAAU,IAAI,GAAG;gBACrD,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;YAC/B;YACA,IAAI,MAAM,IAAI,KAAK,WAAW,UAAU,QAAQ,CAAC,WAAW;gBAC1D,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,IAAI,GAAG;YACnD;QACF;QACA,OAAO,WAAW,KAAK;IACzB;AACF"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport type { NextRequest } from \"next/server\";\r\nimport withAuth from \"./middlewares/withAuth\";\r\n\r\nexport function mainMiddleware(req: NextRequest) {\r\n  const res = NextResponse.next();\r\n  return res;\r\n}\r\n\r\nexport default withAuth(mainMiddleware, [\"/profile\", \"/admin\"]);\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAEA;;;AAEO,SAAS,eAAe,GAAgB;IAC7C,MAAM,MAAM,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC7B,OAAO;AACT;uCAEe,CAAA,GAAA,sIAAA,CAAA,UAAQ,AAAD,EAAE,gBAAgB;IAAC;IAAY;CAAS"}}]
}