{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Ngoding/my-next-app/src/lib/firebase/init.ts"],"sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.FIREBASE_API_KEY,\r\n  authDomain: process.env.FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.FIREBASE_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport default app;\r\n"],"names":[],"mappings":"AAAA,uDAAuD;;;;AACvD;;;;;;AACA,4DAA4D;AAC5D,iEAAiE;AAEjE,wCAAwC;AACxC,MAAM,iBAAiB;IACrB,QAAQ,QAAQ,GAAG,CAAC,gBAAgB;IACpC,YAAY,QAAQ,GAAG,CAAC,oBAAoB;IAC5C,WAAW,QAAQ,GAAG,CAAC,mBAAmB;IAC1C,eAAe,QAAQ,GAAG,CAAC,uBAAuB;IAClD,mBAAmB,QAAQ,GAAG,CAAC,4BAA4B;IAC3D,OAAO,QAAQ,GAAG,CAAC,eAAe;AACpC;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,8HAAA,CAAA,gBAAa,AAAD,EAAE;uCACX","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Ngoding/my-next-app/src/lib/firebase/service.ts"],"sourcesContent":["import {\r\n  addDoc,\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  getFirestore,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport app from \"./init\";\r\nimport bcrypt from \"bcrypt\";\r\nimport { UserType } from \"@/types/usertype\";\r\n\r\nconst firestore = getFirestore(app);\r\n\r\nexport async function retrieveData(collectionName: string) {\r\n  const snapshot = await getDocs(collection(firestore, collectionName));\r\n\r\n  const data = snapshot.docs.map((doc) => ({\r\n    id: doc.id,\r\n    ...doc.data(),\r\n  }));\r\n\r\n  return data;\r\n}\r\n\r\nexport async function retrieveDataById(collectionName: string, id: string) {\r\n  const snapshot = await getDoc(doc(firestore, collectionName, id));\r\n  const data = snapshot.data();\r\n  return data;\r\n}\r\n\r\nexport async function signIn(userData: {\r\n  email: string;\r\n  password: string;\r\n}): Promise<UserType | null> {\r\n  if (userData.email === \"\") {\r\n    return null;\r\n  }\r\n  if (userData.password === \"\") {\r\n    return null;\r\n  }\r\n\r\n  const q = query(\r\n    collection(firestore, \"users\"),\r\n    where(\"email\", \"==\", userData.email)\r\n  );\r\n  const snapshot = await getDocs(q);\r\n\r\n  const data: Array<UserType> = snapshot.docs.map((doc) => ({\r\n    id: doc.id,\r\n    email: doc.data().email,\r\n    fullname: doc.data().fullname,\r\n    password: doc.data().password,\r\n    role: doc.data().role,\r\n  }));\r\n\r\n  return data[0] || null;\r\n}\r\n\r\nexport async function signUp(\r\n  userData: {\r\n    email: string;\r\n    fullname: string;\r\n    password: string;\r\n    role?: string;\r\n  },\r\n  callback: Function\r\n) {\r\n  if (userData.fullname === \"\") {\r\n    callback({ status: false, message: \"Fullname is Required!\" });\r\n    return;\r\n  }\r\n  if (userData.email === \"\") {\r\n    callback({ status: false, message: \"Email is Required!\" });\r\n    return;\r\n  }\r\n  if (userData.password === \"\") {\r\n    callback({ status: false, message: \"Password is Required!\" });\r\n    return;\r\n  }\r\n\r\n  const q = query(\r\n    collection(firestore, \"users\"),\r\n    where(\"email\", \"==\", userData.email)\r\n  );\r\n\r\n  const snapshot = await getDocs(q);\r\n  const data = snapshot.docs.map((doc) => ({\r\n    id: doc.id,\r\n    ...doc.data(),\r\n  }));\r\n\r\n  if (data.length > 0) {\r\n    callback({ status: false, message: \"Email Already Exists\" });\r\n  } else {\r\n    userData.password = await bcrypt.hash(userData.password, 10);\r\n    userData.role = \"member\";\r\n\r\n    await addDoc(collection(firestore, \"users\"), userData)\r\n      .then(() => {\r\n        callback({ status: true, message: \"Register Success\" });\r\n      })\r\n      .catch((error) => {\r\n        callback({ status: false, message: error });\r\n      });\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Ngoding/my-next-app/src/pages/api/auth/%5B...nextauth%5D.ts"],"sourcesContent":["import { signIn } from \"@/lib/firebase/service\";\r\nimport { compare } from \"bcrypt\";\r\nimport NextAuth, { NextAuthOptions, Session } from \"next-auth\";\r\nimport CredentialsProvider from \"next-auth/providers/credentials\";\r\nimport { UserType } from \"../../../types/usertype\";\r\n\r\nconst authOptions: NextAuthOptions = {\r\n  session: {\r\n    strategy: \"jwt\",\r\n  },\r\n  secret: process.env.NEXTAUTH_SECRET,\r\n  providers: [\r\n    CredentialsProvider({\r\n      type: \"credentials\",\r\n      name: \"Credentials\",\r\n      credentials: {\r\n        email: { label: \"Email\", type: \"email\" },\r\n        password: { label: \"Password\", type: \"password\" },\r\n      },\r\n      async authorize(credentials, req) {\r\n        const { email, password } = credentials as UserType;\r\n\r\n        // const user: UserType = { id: 1, email, fullname, password };\r\n        const user: UserType | null = await signIn({ email, password });\r\n\r\n        if (user) {\r\n          const passwordConfirm = await compare(password, user.password);\r\n          if (passwordConfirm) {\r\n            return user as any;\r\n          } else {\r\n            return null;\r\n          }\r\n        } else {\r\n          return null;\r\n        }\r\n      },\r\n    }),\r\n  ],\r\n  callbacks: {\r\n    jwt({ token, account, profile, user }: any) {\r\n      const theUser: UserType = user as UserType;\r\n\r\n      if (account?.provider === \"credentials\") {\r\n        token.email = theUser.email;\r\n        token.fullname = theUser.fullname;\r\n        token.role = theUser.role;\r\n      }\r\n      return token;\r\n    },\r\n    async session({ session, token }: any) {\r\n      interface mySession extends Session {\r\n        user: {\r\n          email: string;\r\n          fullname: string;\r\n          role: string;\r\n        };\r\n      }\r\n\r\n      const theSession = session as mySession;\r\n\r\n      if (\"email\" in token) theSession.user.email = token.email;\r\n      if (\"fullname\" in token) theSession.user.fullname = token.fullname;\r\n      if (\"role\" in token) theSession.user.role = token.role;\r\n\r\n      return theSession;\r\n    },\r\n  },\r\n  pages: {\r\n    signIn: \"/auth/login\",\r\n  },\r\n};\r\n\r\nexport default NextAuth(authOptions);\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;;;;;AAGA,MAAM,cAA+B;IACnC,SAAS;QACP,UAAU;IACZ;IACA,QAAQ,QAAQ,GAAG,CAAC,eAAe;IACnC,WAAW;QACT,CAAA,GAAA,yKAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAQ;gBACvC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW,EAAE,GAAG;gBAC9B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;gBAE5B,+DAA+D;gBAC/D,MAAM,OAAwB,MAAM,CAAA,GAAA,0HAAA,CAAA,SAAM,AAAD,EAAE;oBAAE;oBAAO;gBAAS;gBAE7D,IAAI,MAAM;oBACR,MAAM,kBAAkB,MAAM,CAAA,GAAA,qGAAA,CAAA,UAAO,AAAD,EAAE,UAAU,KAAK,QAAQ;oBAC7D,IAAI,iBAAiB;wBACnB,OAAO;oBACT,OAAO;wBACL,OAAO;oBACT;gBACF,OAAO;oBACL,OAAO;gBACT;YACF;QACF;KACD;IACD,WAAW;QACT,KAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAO;YACxC,MAAM,UAAoB;YAE1B,IAAI,SAAS,aAAa,eAAe;gBACvC,MAAM,KAAK,GAAG,QAAQ,KAAK;gBAC3B,MAAM,QAAQ,GAAG,QAAQ,QAAQ;gBACjC,MAAM,IAAI,GAAG,QAAQ,IAAI;YAC3B;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAO;YASnC,MAAM,aAAa;YAEnB,IAAI,WAAW,OAAO,WAAW,IAAI,CAAC,KAAK,GAAG,MAAM,KAAK;YACzD,IAAI,cAAc,OAAO,WAAW,IAAI,CAAC,QAAQ,GAAG,MAAM,QAAQ;YAClE,IAAI,UAAU,OAAO,WAAW,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI;YAEtD,OAAO;QACT;IACF;IACA,OAAO;QACL,QAAQ;IACV;AACF;uCAEe,CAAA,GAAA,iHAAA,CAAA,UAAQ,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Ngoding/my-next-app/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Ngoding/my-next-app/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Ngoding/my-next-app/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Ngoding/my-next-app/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;;;;;yMAGzBD,QAAAA,EAAMC,4IAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,4IAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}}]
}