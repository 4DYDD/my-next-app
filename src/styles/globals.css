@import "tailwindcss";

:root {
  --max-width: 1100px;
  --border-radius: 12px;
  --font-mono: ui-monospace, Menlo, Monaco, "Cascadia Mono", "Segoe UI Mono",
    "Roboto Mono", "Oxygen Mono", "Ubuntu Monospace", "Source Code Pro",
    "Fira Mono", "Droid Sans Mono", "Courier New", monospace;

  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;

  --primary-glow: conic-gradient(
    from 180deg at 50% 50%,
    #16abff33 0deg,
    #0885ff33 55deg,
    #54d6ff33 120deg,
    #0071ff33 160deg,
    transparent 360deg
  );
  --secondary-glow: radial-gradient(
    rgba(255, 255, 255, 1),
    rgba(255, 255, 255, 0)
  );

  --tile-start-rgb: 239, 245, 249;
  --tile-end-rgb: 228, 232, 233;
  --tile-border: conic-gradient(
    #00000080,
    #00000040,
    #00000030,
    #00000020,
    #00000010,
    #00000010,
    #00000080
  );

  --callout-rgb: 238, 240, 241;
  --callout-border-rgb: 172, 175, 176;
  --card-rgb: 180, 185, 188;
  --card-border-rgb: 131, 134, 135;
}

/* @media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;

    --primary-glow: radial-gradient(rgba(1, 65, 255, 0.4), rgba(1, 65, 255, 0));
    --secondary-glow: linear-gradient(
      to bottom right,
      rgba(1, 65, 255, 0),
      rgba(1, 65, 255, 0),
      rgba(1, 65, 255, 0.3)
    );

    --tile-start-rgb: 2, 13, 46;
    --tile-end-rgb: 2, 5, 19;
    --tile-border: conic-gradient(
      #ffffff80,
      #ffffff40,
      #ffffff30,
      #ffffff20,
      #ffffff10,
      #ffffff10,
      #ffffff80
    );

    --callout-rgb: 20, 20, 20;
    --callout-border-rgb: 108, 108, 108;
    --card-rgb: 100, 100, 100;
    --card-border-rgb: 200, 200, 200;
  }
} */

* {
  box-sizing: border-box;
}

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
}

/* body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
} */

/* a {
  color: inherit;
  text-decoration: none;
} */

/* @media (prefers-color-scheme: dark) {
  html {
    color-scheme: dark;
  }
} */

.flexc {
  @apply flex items-center justify-center;
}
.transcenter {
  @apply absolute -translate-x-1/2 -translate-y-1/2 left-1/2 top-1/2;
}
.transcenter-r {
  @apply absolute -translate-x-1/2 -translate-y-1/2 right-1/2 top-1/2;
}
.transall {
  @apply transition-all duration-100 ease-in-out;
}
.clicked {
  @apply cursor-pointer active:scale-90;
}

@keyframes pingku {
  75%,
  100% {
    transform: scale(2);
    opacity: 0;
  }
}
.animate-pingku {
  animation: pingku 0.5s cubic-bezier(0, 0, 0.2, 1) infinite;
}
@keyframes pulseku {
  50% {
    opacity: 0.5;
  }
}
.animate-pulseku {
  animation: pulseku 0.5s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}
@keyframes bounceku {
  0%,
  100% {
    transform: translateY(-10%);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: none;
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}
.animate-bounceku {
  animation: bounceku 0.5s infinite;
}

.fade-in {
  animation: fadeIn 0.5s ease-in-out forwards;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.fade-out {
  animation: fadeOut 0.5s ease-in-out forwards;
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

.curve-down {
  animation-name: curve-down;
  animation-duration: 900ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: forwards;
}

@keyframes curve-down {
  0% {
    transform: scale(1, 1);
    top: 50%;
  }
  5% {
    transform: scale(1, 1);
    top: 60%;
  }
  50% {
    transform: scale(1, 1);
    top: 70%;
  }
  100% {
    transform: scale(1, 1);
    top: 50%;
  }
}

.animate-squish {
  will-change: transform;
  animation-name: animate-squish;
  animation-duration: 100ms;
  animation-fill-mode: forwards;
}
.animate-squish-barbar {
  will-change: transform;
  animation-name: animate-squish-barbar;
  animation-duration: 150ms;
  animation-fill-mode: both;
}
.animate-squish-barbar-reverse {
  will-change: transform;
  animation-name: animate-squish-barbar;
  animation-duration: 150ms;
  animation-fill-mode: forwards;
  animation-direction: reverse;
}
.animate-squish-kalem {
  will-change: transform;
  animation-name: animate-squish-kalem;
  animation-duration: 150ms;
  animation-fill-mode: forwards;
}

@keyframes animate-squish {
  /* === BIASA AJA === */
  0% {
    transform: scale(0.9, 0.95);
  }
  25% {
    transform: scale(1.15, 1);
  }
  75% {
    transform: scale(1, 1.15);
  }
  100% {
    transform: scale(1, 1);
  }
}

@keyframes animate-squish-barbar {
  /* === AGAK BARBAR === */
  0% {
    transform: scale(0.9, 0.95) skew(0deg, 0deg);
    animation-timing-function: ease-out;
  }
  25% {
    transform: scale(1.15, 1) skew(-5deg, 0deg);
    animation-timing-function: ease-in-out;
  }
  50% {
    transform: scale(1.15, 1) skew(5deg, 0deg);
    animation-timing-function: ease-in-out;
  }
  75% {
    transform: scale(1, 1.15) skew(0deg, -5deg);
    animation-timing-function: ease-in-out;
  }
  90% {
    transform: scale(1.05, 1.05) skew(0deg, 0deg);
    animation-timing-function: ease-out;
  }
  100% {
    transform: scale(1, 1) skew(0deg, 0deg);
    animation-timing-function: ease-out;
  }
}

@keyframes animate-squish-kalem {
  /* === AGAK KALEM === */
  0% {
    transform: scale(0.9, 0.95) skew(0deg, 0deg);
    animation-timing-function: ease-out;
  }
  25% {
    transform: scale(1.15, 1) skew(-5deg, 0deg);
    animation-timing-function: ease-in-out;
  }
  75% {
    transform: scale(1, 1.15) skew(0deg, -5deg);
    animation-timing-function: ease-in-out;
  }
  90% {
    transform: scale(1.05, 1.05) skew(0deg, 0deg);
    animation-timing-function: ease-out;
  }
  100% {
    transform: scale(1, 1) skew(0deg, 0deg);
    animation-timing-function: ease-out;
  }
}

@keyframes fast-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.animate-fast-spin {
  animation: fast-spin 0.8s linear infinite;
}
